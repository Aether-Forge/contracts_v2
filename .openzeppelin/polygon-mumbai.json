{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xdFDADeBf45d1509066CAefD0CcCf0162a8279fE3",
      "txHash": "0x91aec1fef2f0281e17f6db88bbc63e1f795bdf3e919d3990c7900938e4890a16",
      "kind": "transparent"
    },
    {
      "address": "0x4Dc748050156B8671339472ca30DB93d4fA8Dce9",
      "txHash": "0x0228bf852980d01362282ff2e1f2556255eef312688211d130ce28b142627e1c",
      "kind": "transparent"
    },
    {
      "address": "0x0fAA1DdBEF2405E0d6B6d730436fB1415453C2C9",
      "txHash": "0xb7564c0813f6da301cc957ab76651564c2fb333a998582541ccb70b04d4ca95d",
      "kind": "transparent"
    },
    {
      "address": "0x5c2223CC96Ef0b331a206012D86b0fc980D38e18",
      "txHash": "0x3dae99d367157e945b9591be900f5b608f204c45585daf3ea6ecd0511bc4c668",
      "kind": "transparent"
    },
    {
      "address": "0x55D84AFeAD3f5d98e97b74f441733BD837fd3a0E",
      "txHash": "0xc1bdfe824568b3ab24ab9dd2794d6374d73d425e258b9d3378690cda4cb18482",
      "kind": "transparent"
    },
    {
      "address": "0xf355b9110FD0a755a718dEdeD5f98e248451eba3",
      "txHash": "0xabc20752712628f574296997922c040279eff697495132d7bcebdaa8655751bd",
      "kind": "transparent"
    },
    {
      "address": "0x4fFF6273F0eFF5bC4d498A462a98DD5a1C207b65",
      "txHash": "0x18586f7e8b0396c5dc7f9842fb73ca04a244d21f2a264219da6a70cf58b87074",
      "kind": "transparent"
    },
    {
      "address": "0x937b057807a5eD4Dd2C79632934e0D87105CbB45",
      "txHash": "0x40a3047e7cf4b1f1d90f4259ab57bc12a984cc9d649a533219ad2bbbd0d01059",
      "kind": "transparent"
    },
    {
      "address": "0x0c098235eFcB4EF9C7758A60D65784dA903f414E",
      "txHash": "0x055a201ad6746feac8204aa3239ee1cce510406a7f2dca17bcdcad9aca6c9f6f",
      "kind": "transparent"
    },
    {
      "address": "0xE9938a6C47b5848851232DD261C17a17b74b001E",
      "txHash": "0xec06a1d2747f827870a10bced8d0a386c0c0b6979210ce1b0eeb0b504c7801fa",
      "kind": "transparent"
    },
    {
      "address": "0xC8BE28EC678c04242B9419766E28767d0f533675",
      "txHash": "0x156593b1054bbe40701b142b3cdf807f55b52cb821d78ee960c33965b36c3ee5",
      "kind": "transparent"
    },
    {
      "address": "0x6a99Bfbb0D5D8562E8f7aeaE3a2d4b9232FB766a",
      "txHash": "0xd9e2ed32105985a37f79059f0a1824dbd46965a54966bed2f20e27674e46bae0",
      "kind": "transparent"
    },
    {
      "address": "0xfD9466A2C59D3C637E278491a9eD9a7A3e2d0062",
      "txHash": "0xe358fa3542879016a2b031d99e7900937c382ea74151df3ecc26ba019bc84b90",
      "kind": "transparent"
    },
    {
      "address": "0x09F50567311Ee7496Bb51eF3de8392627EB3f518",
      "txHash": "0x11f27b6f538038aa798aa486b492be82cce747b215aaba9b990d6712287302e9",
      "kind": "transparent"
    }
  ],
  "impls": {
    "7debdc423d6441a87686a743a812fef40245672f2cbc300f4f0e788d5c31abf7": {
      "address": "0x0412741caf2093B7AFAE6c89663BdcD237d854FC",
      "txHash": "0x4b9943848ce00972cd08f33230f9154b89a3a198e09ff9c2a2728de02ef11f52",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "AEGStaking",
            "src": "contracts/AEGStaking.sol:41"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_struct(Pool)698_storage)dyn_storage",
            "contract": "AEGStaking",
            "src": "contracts/AEGStaking.sol:43"
          },
          {
            "label": "aegToken",
            "offset": 0,
            "slot": "53",
            "type": "t_contract(IERC20)530",
            "contract": "AEGStaking",
            "src": "contracts/AEGStaking.sol:44"
          },
          {
            "label": "nft",
            "offset": 0,
            "slot": "54",
            "type": "t_contract(IERC721)646",
            "contract": "AEGStaking",
            "src": "contracts/AEGStaking.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Pool)698_storage)dyn_storage": {
            "label": "struct AEGStaking.Pool[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)530": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC721)646": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Pool)698_storage": {
            "label": "struct AEGStaking.Pool",
            "members": [
              {
                "label": "lockDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardMultiplier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalStaked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "limitPerAddress",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "maxStake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "isPaused",
                "type": "t_bool",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "startTimes",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "holdersWhenStaking",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "78aaadfd9e9a4f762b82a29432abb84c9c713e36e7a61f7f3616e4ce698578dc": {
      "address": "0xfF2dab87Cc67d2DE361d179F0EfA30590B77D9c4",
      "txHash": "0xa0172d878055152e0b7ecb39125dcefa67691799dab51f22e649414e7ae6468b",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "AEGStaking",
            "src": "contracts/AEGStaking.sol:49"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_struct(Pool)698_storage)dyn_storage",
            "contract": "AEGStaking",
            "src": "contracts/AEGStaking.sol:51"
          },
          {
            "label": "aegToken",
            "offset": 0,
            "slot": "53",
            "type": "t_contract(IERC20)530",
            "contract": "AEGStaking",
            "src": "contracts/AEGStaking.sol:52"
          },
          {
            "label": "nft",
            "offset": 0,
            "slot": "54",
            "type": "t_contract(IERC721)646",
            "contract": "AEGStaking",
            "src": "contracts/AEGStaking.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Pool)698_storage)dyn_storage": {
            "label": "struct AEGStaking.Pool[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)530": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC721)646": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Pool)698_storage": {
            "label": "struct AEGStaking.Pool",
            "members": [
              {
                "label": "lockDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardMultiplier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalStaked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "limitPerAddress",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "maxStake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "isPaused",
                "type": "t_bool",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "startTimes",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "holdersWhenStaking",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "40a6f16945a83879ba5167f56ffb5e8557539c9b930b42c83d7968316e1976c8": {
      "address": "0x9b414a83B275Ec2c7d44c15D568Ff66C0390a0e6",
      "txHash": "0xb26fabdac1b53a2e3ca52fb0bcc235a536b75593cf7cca5e5e2d11d6ff0eff82",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "AEGStaking",
            "src": "contracts/AEGStaking.sol:51"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_struct(Pool)702_storage)dyn_storage",
            "contract": "AEGStaking",
            "src": "contracts/AEGStaking.sol:53"
          },
          {
            "label": "aegToken",
            "offset": 0,
            "slot": "53",
            "type": "t_contract(IERC20)530",
            "contract": "AEGStaking",
            "src": "contracts/AEGStaking.sol:54"
          },
          {
            "label": "nft",
            "offset": 0,
            "slot": "54",
            "type": "t_contract(IERC721)646",
            "contract": "AEGStaking",
            "src": "contracts/AEGStaking.sol:55"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "55",
            "type": "t_uint256",
            "contract": "AEGStaking",
            "src": "contracts/AEGStaking.sol:56"
          },
          {
            "label": "totalRewardsClaimed",
            "offset": 0,
            "slot": "56",
            "type": "t_uint256",
            "contract": "AEGStaking",
            "src": "contracts/AEGStaking.sol:57"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Pool)702_storage)dyn_storage": {
            "label": "struct AEGStaking.Pool[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)530": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC721)646": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Pool)702_storage": {
            "label": "struct AEGStaking.Pool",
            "members": [
              {
                "label": "lockDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardMultiplier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalStaked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "limitPerAddress",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "maxStake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "isPaused",
                "type": "t_bool",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "startTimes",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "holdersWhenStaking",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "rewardsClaimed",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "b9d43efb0d94011cd754b330656a4cd15298e67d2846d1de5af5c23705057c65": {
      "address": "0xdc42e9eA13d81d704eF27CCDC209c67Bf1C4488C",
      "txHash": "0xb05aff4065d6446264441a572e74086aac06e6dbdd6bdac542d305303d8c691b",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "AEGStaking_2",
            "src": "contracts/AEGStaking_2.sol:59"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_struct(Pool)706_storage)dyn_storage",
            "contract": "AEGStaking_2",
            "src": "contracts/AEGStaking_2.sol:61"
          },
          {
            "label": "aegToken",
            "offset": 0,
            "slot": "53",
            "type": "t_contract(IERC20)530",
            "contract": "AEGStaking_2",
            "src": "contracts/AEGStaking_2.sol:62"
          },
          {
            "label": "nft",
            "offset": 0,
            "slot": "54",
            "type": "t_contract(IERC721)646",
            "contract": "AEGStaking_2",
            "src": "contracts/AEGStaking_2.sol:63"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "55",
            "type": "t_uint256",
            "contract": "AEGStaking_2",
            "src": "contracts/AEGStaking_2.sol:64"
          },
          {
            "label": "totalRewardsClaimed",
            "offset": 0,
            "slot": "56",
            "type": "t_uint256",
            "contract": "AEGStaking_2",
            "src": "contracts/AEGStaking_2.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Pool)706_storage)dyn_storage": {
            "label": "struct AEGStaking_2.Pool[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Stake)675_storage)dyn_storage": {
            "label": "struct AEGStaking_2.Stake[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)530": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC721)646": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(Stake)675_storage)dyn_storage)": {
            "label": "mapping(address => struct AEGStaking_2.Stake[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Pool)706_storage": {
            "label": "struct AEGStaking_2.Pool",
            "members": [
              {
                "label": "lockDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardMultiplier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalStaked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "limitPerAddress",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "maxStake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "isPaused",
                "type": "t_bool",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "rewardsClaimed",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "stakes",
                "type": "t_mapping(t_address,t_array(t_struct(Stake)675_storage)dyn_storage)",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Stake)675_storage": {
            "label": "struct AEGStaking_2.Stake",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "holderWhenStaking",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "e1793c795b125e80de63ba75daedafa72f85f3b58f76c72a65452081625bf504": {
      "address": "0xE2bc8efEa7326ed7ade7DE9B60bCC2752593bc16",
      "txHash": "0xbcfc14514e31f2f30ff6fc3fa94884a7c9719e80ecfee5875580e0315b25b3e4",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "AEGStaking_2",
            "src": "contracts/AEGStaking_2.sol:61"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_struct(Pool)708_storage)dyn_storage",
            "contract": "AEGStaking_2",
            "src": "contracts/AEGStaking_2.sol:63"
          },
          {
            "label": "aegToken",
            "offset": 0,
            "slot": "53",
            "type": "t_contract(IERC20)530",
            "contract": "AEGStaking_2",
            "src": "contracts/AEGStaking_2.sol:64"
          },
          {
            "label": "nft",
            "offset": 0,
            "slot": "54",
            "type": "t_contract(IERC721)646",
            "contract": "AEGStaking_2",
            "src": "contracts/AEGStaking_2.sol:65"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "55",
            "type": "t_uint256",
            "contract": "AEGStaking_2",
            "src": "contracts/AEGStaking_2.sol:66"
          },
          {
            "label": "totalRewardsClaimed",
            "offset": 0,
            "slot": "56",
            "type": "t_uint256",
            "contract": "AEGStaking_2",
            "src": "contracts/AEGStaking_2.sol:67"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Pool)708_storage)dyn_storage": {
            "label": "struct AEGStaking_2.Pool[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Stake)675_storage)dyn_storage": {
            "label": "struct AEGStaking_2.Stake[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)530": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC721)646": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(Stake)675_storage)dyn_storage)": {
            "label": "mapping(address => struct AEGStaking_2.Stake[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Pool)708_storage": {
            "label": "struct AEGStaking_2.Pool",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lockDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "rewardMultiplier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "totalStaked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "limitPerAddress",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "maxStake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "isPaused",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "rewardsClaimed",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "stakes",
                "type": "t_mapping(t_address,t_array(t_struct(Stake)675_storage)dyn_storage)",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_struct(Stake)675_storage": {
            "label": "struct AEGStaking_2.Stake",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "holderWhenStaking",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "2be6470cf7d7e3b507efee24cd4f76fc3bed5aeb557482213ee802843d217b4d": {
      "address": "0xDe520674EBe06BA812dCbaB8a70Bf53fF515317E",
      "txHash": "0x883e586757df89d11f3312dd3b65e5c931deb4d37e0653aeb1be12f5f525c0ea",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IERC20Upgradeable)287",
            "contract": "ZealyClaim",
            "src": "contracts/ZealyClaim.sol:22"
          },
          {
            "label": "nft",
            "offset": 0,
            "slot": "52",
            "type": "t_contract(ICard)686",
            "contract": "ZealyClaim",
            "src": "contracts/ZealyClaim.sol:23"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "53",
            "type": "t_address",
            "contract": "ZealyClaim",
            "src": "contracts/ZealyClaim.sol:24"
          },
          {
            "label": "allocations",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_address,t_struct(Allocation)695_storage)",
            "contract": "ZealyClaim",
            "src": "contracts/ZealyClaim.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ICard)686": {
            "label": "contract ICard",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)287": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(Allocation)695_storage)": {
            "label": "mapping(address => struct ZealyClaim.Allocation)",
            "numberOfBytes": "32"
          },
          "t_struct(Allocation)695_storage": {
            "label": "struct ZealyClaim.Allocation",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rarity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "9754b217599eae67d479f393ac08f6bff9327edff8c9a55658c7d0d6db104a4e": {
      "address": "0x4A520f6b0EB8177Aa3b2c4d3be541C960472244F",
      "txHash": "0x3e8ca38193182f63f228861592e8f51d9bede491285b573f8e88b1a52c8f8ad1",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(IERC20Upgradeable)287",
            "contract": "ZealyClaim",
            "src": "contracts/ZealyClaim.sol:30"
          },
          {
            "label": "nft",
            "offset": 0,
            "slot": "52",
            "type": "t_contract(ICard)565",
            "contract": "ZealyClaim",
            "src": "contracts/ZealyClaim.sol:31"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "53",
            "type": "t_address",
            "contract": "ZealyClaim",
            "src": "contracts/ZealyClaim.sol:32"
          },
          {
            "label": "paused",
            "offset": 20,
            "slot": "53",
            "type": "t_bool",
            "contract": "ZealyClaim",
            "src": "contracts/ZealyClaim.sol:33"
          },
          {
            "label": "allocations",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_address,t_struct(Allocation)574_storage)",
            "contract": "ZealyClaim",
            "src": "contracts/ZealyClaim.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ICard)565": {
            "label": "contract ICard",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)287": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(Allocation)574_storage)": {
            "label": "mapping(address => struct ZealyClaim.Allocation)",
            "numberOfBytes": "32"
          },
          "t_struct(Allocation)574_storage": {
            "label": "struct ZealyClaim.Allocation",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rarity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "a50dc82d6c2a424da30a101907b125732631e5b51ec13463eca7bdc293843f66": {
      "address": "0x4D4bd94548D4d15F883629DDB8a206bA5AE5b0Bf",
      "txHash": "0x7d3d9a20ae3e2d1fff9ce49f08b625b99747be3956430d3efcb330d615fde36f",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "aegToken",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "COEConverter_V2",
            "src": "contracts/Converter_V2.sol:14"
          },
          {
            "label": "wAegToken",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "COEConverter_V2",
            "src": "contracts/Converter_V2.sol:15"
          },
          {
            "label": "cards",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "COEConverter_V2",
            "src": "contracts/Converter_V2.sol:16"
          },
          {
            "label": "ethernals",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "COEConverter_V2",
            "src": "contracts/Converter_V2.sol:17"
          },
          {
            "label": "adventurers",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "COEConverter_V2",
            "src": "contracts/Converter_V2.sol:18"
          },
          {
            "label": "emotes",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "COEConverter_V2",
            "src": "contracts/Converter_V2.sol:19"
          },
          {
            "label": "cardBacks",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "COEConverter_V2",
            "src": "contracts/Converter_V2.sol:20"
          },
          {
            "label": "paymentReceiver",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "COEConverter_V2",
            "src": "contracts/Converter_V2.sol:21"
          },
          {
            "label": "paused",
            "offset": 20,
            "slot": "7",
            "type": "t_bool",
            "contract": "COEConverter_V2",
            "src": "contracts/Converter_V2.sol:22"
          },
          {
            "label": "useChainlink",
            "offset": 21,
            "slot": "7",
            "type": "t_bool",
            "contract": "COEConverter_V2",
            "src": "contracts/Converter_V2.sol:23"
          },
          {
            "label": "aegUsdPriceFeed",
            "offset": 0,
            "slot": "8",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "COEConverter_V2",
            "src": "contracts/Converter_V2.sol:25"
          },
          {
            "label": "uniswapV3Pool",
            "offset": 0,
            "slot": "9",
            "type": "t_contract(IUniswapV3Pool)461",
            "contract": "COEConverter_V2",
            "src": "contracts/Converter_V2.sol:26"
          },
          {
            "label": "roles",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "COEConverter_V2",
            "src": "contracts/Converter_V2.sol:182"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV3Pool)461": {
            "label": "contract IUniswapV3Pool",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "d581cd3c9dad1cfae415a1097ede42f2e27223a8f6e66f72d7aabed3c39fc3d0": {
      "address": "0x7C4EDc2099Ded024247DfE588619A48da48b724C",
      "txHash": "0x65dea899a87179e0167656f29da72a2a05dd370ff550dde2642d31fcc25b6c47",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable-4.7.3/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "aegToken",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "COEConverter_V2",
            "src": "contracts/Converter_V2.sol:14"
          },
          {
            "label": "wAegToken",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "COEConverter_V2",
            "src": "contracts/Converter_V2.sol:15"
          },
          {
            "label": "cards",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "COEConverter_V2",
            "src": "contracts/Converter_V2.sol:16"
          },
          {
            "label": "ethernals",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "COEConverter_V2",
            "src": "contracts/Converter_V2.sol:17"
          },
          {
            "label": "adventurers",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "COEConverter_V2",
            "src": "contracts/Converter_V2.sol:18"
          },
          {
            "label": "emotes",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "COEConverter_V2",
            "src": "contracts/Converter_V2.sol:19"
          },
          {
            "label": "cardBacks",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "COEConverter_V2",
            "src": "contracts/Converter_V2.sol:20"
          },
          {
            "label": "paymentReceiver",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "COEConverter_V2",
            "src": "contracts/Converter_V2.sol:21"
          },
          {
            "label": "paused",
            "offset": 20,
            "slot": "7",
            "type": "t_bool",
            "contract": "COEConverter_V2",
            "src": "contracts/Converter_V2.sol:22"
          },
          {
            "label": "useChainlink",
            "offset": 21,
            "slot": "7",
            "type": "t_bool",
            "contract": "COEConverter_V2",
            "src": "contracts/Converter_V2.sol:23"
          },
          {
            "label": "aegUsdPriceFeed",
            "offset": 0,
            "slot": "8",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "COEConverter_V2",
            "src": "contracts/Converter_V2.sol:25"
          },
          {
            "label": "uniswapV3Pool",
            "offset": 0,
            "slot": "9",
            "type": "t_contract(IUniswapV3Pool)461",
            "contract": "COEConverter_V2",
            "src": "contracts/Converter_V2.sol:26"
          },
          {
            "label": "usdcToken",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "COEConverter_V2",
            "src": "contracts/Converter_V2.sol:185"
          },
          {
            "label": "usdtToken",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "COEConverter_V2",
            "src": "contracts/Converter_V2.sol:186"
          },
          {
            "label": "purchaseOptions",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "COEConverter_V2",
            "src": "contracts/Converter_V2.sol:188"
          },
          {
            "label": "roles",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "contract": "COEConverter_V2",
            "src": "contracts/Converter_V2.sol:259"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV3Pool)461": {
            "label": "contract IUniswapV3Pool",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "5f3ceef552c9ce130543f3258be796a247e417aa3a64d675a6c1d9d07c6fe13c": {
      "address": "0x013ed9Ac9A6153bE64c35C17e4C20898946d0556",
      "txHash": "0x485230877af6576933d5a2fea9a2dc1d8ab3670a775ed2007380cdc11bf5aa95",
      "layout": {
        "solcVersion": "0.8.25",
        "storage": [
          {
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "AEGStaking_2",
            "src": "contracts/AEGStaking_2.sol:68"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_struct(Pool)4097_storage)dyn_storage",
            "contract": "AEGStaking_2",
            "src": "contracts/AEGStaking_2.sol:70"
          },
          {
            "label": "aegToken",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IERC20)2432",
            "contract": "AEGStaking_2",
            "src": "contracts/AEGStaking_2.sol:71"
          },
          {
            "label": "nft",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IERC721)2575",
            "contract": "AEGStaking_2",
            "src": "contracts/AEGStaking_2.sol:72"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "AEGStaking_2",
            "src": "contracts/AEGStaking_2.sol:73"
          },
          {
            "label": "totalRewardsClaimed",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "AEGStaking_2",
            "src": "contracts/AEGStaking_2.sol:74"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)10_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)352_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Pool)4097_storage)dyn_storage": {
            "label": "struct AEGStaking_2.Pool[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Stake)4064_storage)dyn_storage": {
            "label": "struct AEGStaking_2.Stake[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)2432": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC721)2575": {
            "label": "contract IERC721",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(Stake)4064_storage)dyn_storage)": {
            "label": "mapping(address => struct AEGStaking_2.Stake[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Pool)4097_storage": {
            "label": "struct AEGStaking_2.Pool",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lockDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "rewardMultiplier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "totalStaked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "limitPerAddress",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "maxStake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "isPaused",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "rewardsClaimed",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "stakes",
                "type": "t_mapping(t_address,t_array(t_struct(Stake)4064_storage)dyn_storage)",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_struct(Stake)4064_storage": {
            "label": "struct AEGStaking_2.Stake",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "holderWhenStaking",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
